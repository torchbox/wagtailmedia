[tox]
requires = tox-docker
skipsdist = True
toxworkdir = /home/vagrant/.tox
usedevelop = True

envlist =
    py{35,36,37}-dj{20,21,22}-wag{22,23,24,25,26,27}
    interactive
    flake
    isort


[testenv]
install_command = pip install -e ".[testing]" -U {opts} {packages}

commands =
    {posargs:coverage run runtests.py}

basepython =
    py35: python3.5
    py36: python3.6
    py37: python3.7
    {interactive,flake,isort}: python3.6

deps =
    dj111: Django>=1.11.20,<2.0
    dj20: Django>=2.0,<2.1
    dj21: Django>=2.1,<2.2
    dj22: Django>=2.2,<2.3
    wag22: wagtail>=2.2,<2.3
    wag23: wagtail>=2.3,<2.4
    wag24: wagtail>=2.4,<2.5
    wag25: wagtail>=2.5,<2.6
    wag26: wagtail>=2.6,<2.7
    wag27: wagtail>=2.7,<2.8
    {interactive,flake,isort}: wagtail


[testenv:flake]
commands = {posargs:flake8 wagtailmedia}


[testenv:isort]
commands = {posargs:isort --check-only --diff --recursive wagtailmedia}


[testenv:interactive]
commands_pre =
    python {toxinidir}/manage.py makemigrations
    python {toxinidir}/manage.py migrate
    python {toxinidir}/manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_superuser('super', 'super@example.com', 'super')"

commands =
    {posargs:python manage.py runserver 0.0.0.0:8020}

docker =
    postgres:12.0
    redis:5.0

dockerenv =
    POSTGRES_PASSWORD=pgpass
    POSTGRES_USER=pguser
    POSTGRES_DB=pgdb

setenv =
    INTERACTIVE = 1


[docker:redis:5.0]
healthcheck_cmd = redis-cli ping | grep -q PONG
healthcheck_interval = 3
healthcheck_timeout = 3
healthcheck_retries = 30
healthcheck_start_period = 5


[docker:postgres:12.0]
healthcheck_cmd = pg_isready
healthcheck_interval = 3
healthcheck_timeout = 3
healthcheck_retries = 30
healthcheck_start_period = 5
