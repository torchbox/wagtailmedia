[project]
name = "wagtailmedia"
description = "A Wagtail module for audio and video files."
authors = [{name = "Mikalai Radchuk ", email = "hello@torchbox.com"}]
maintainers = [{name = "Dan Braghis", email="dan.braghis@torchbox.com"}]
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["Wagtail", "Django", "media"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Wagtail",
    "Framework :: Wagtail :: 4",
    "Framework :: Wagtail :: 5",
]

dynamic = ["version"]
requires-python = ">=3.8"
dependencies = [
    "Wagtail>=4.1",
    "Django>=3.2",
]

[project.urls]
Repository = "https://github.com/torchbox/wagtailmedia"
Changelog = "https://github.com/torchbox/wagtailmedia/blob/main/CHANGELOG.md"


[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "wagtailmedia"

[tool.flit.sdist]
exclude = [
    "tests",
    "Makefile",
    "docs",
    ".*",
    "*.json",
    "*.ini",
    "*.yml",
    "CHANGELOG.md",
    "SPECIFICATION.md",
    "manage.py",
    "runtests.py",
]

[tool.black]
line_length = 88
target-version = ["py38"]

[tool.ruff]
target-version = "py38"

select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "S",  # flake8-bandit
    "W",  # pycodestyle warnings
    "UP", # pyupgrade
]

# Never enforce `E501` (line length violations).
ignore = ["E501"]

[tool.ruff.per-file-ignores]
"tests/**.py" = ["S105", "S106"]

[tool.ruff.isort]
known-first-party = ["src"]
lines-between-types = 1
lines-after-imports = 2

[tool.coverage.run]
branch = true
parallel = true
source = ["wagtailmedia"]

omit = ["**/migrations/*", "tests/*", "src/wagtailmedia/admin.py", "src/wagtailmedia/deprecation.py"]

[tool.coverage.paths]
source = ["src", ".tox/py*/**/site-packages"]

[tool.coverage.report]
show_missing = true
ignore_errors = true
skip_empty = true
skip_covered = true
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc.)?abstractmethod",

    # Nor complain about type checking
    "if TYPE_CHECKING:",
]
